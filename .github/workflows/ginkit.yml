name: Run Tests


on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: '^1.20'
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --verbose
  test:
    needs: lint
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go: [1.18, 1.21]
        include:
          - os: ubuntu-latest
            go-build: ~/.cache/go-build
          - os: macos-latest
            go-build: ~/Library/Caches/go-build
    name: ${{ matrix.os }} @ Go ${{ matrix.go }}
    runs-on: ${{ matrix.os }}
    env:
      GO111MODULE: on
      GOPROXY: https://proxy.golang.org
    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: actions/cache@v4
        with:
          path: |
            ${{ matrix.go-build }}
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run Tests
        run: |
          go mod download
          go test ./...

  tests-pass:
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - name: tests-pass
        run: echo "Tests pass!"

  dependabot:
    name: 'Dependabot'
    needs: [tests-pass] # After the E2E and build jobs, if one of them fails, it won't merge the PR.
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]'}} # Detect that the PR author is dependabot
    steps:
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --repo ${{ github.repository }}  --auto --squash "$PR_URL" # Use Github CLI to merge automatically the PR
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  release:
    needs: [tests-pass]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Get current tag
        id: get_tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch --tags
          TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          TAG=${TAG#v}  # Remove the 'v' prefix if it exists
          echo "Current tag: $TAG"

          IFS='.' read -r -a TAG_PARTS <<< "$TAG"
          NEW_TAG="${TAG_PARTS[0]}.$((${TAG_PARTS[1]} + 1)).0"
          NEW_TAG="v$NEW_TAG"
          echo "New tag: $NEW_TAG"

          git tag $NEW_TAG
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}